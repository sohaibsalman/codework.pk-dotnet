[{"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\index.js":"1","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\App.js":"2","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\components\\pages\\login\\login.jsx":"3","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\styles\\login.js":"4","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\styles\\utilityStyles.js":"5","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\services\\httpService.js":"6","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\services\\authService.js":"7"},{"size":278,"mtime":1607100591102,"results":"8","hashOfConfig":"9"},{"size":458,"mtime":1607159626276,"results":"10","hashOfConfig":"9"},{"size":3399,"mtime":1607159364583,"results":"11","hashOfConfig":"9"},{"size":211,"mtime":1607014845777,"results":"12","hashOfConfig":"9"},{"size":856,"mtime":1607100591122,"results":"13","hashOfConfig":"9"},{"size":421,"mtime":1607156123576,"results":"14","hashOfConfig":"9"},{"size":260,"mtime":1607157208406,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"16892i0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\index.js",[],["34","35"],"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\App.js",[],"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\components\\pages\\login\\login.jsx",["36"],"import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { login } from \"../../../services/authService\";\r\n\r\nimport utilityStyles from \"../../../styles/utilityStyles\";\r\n\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"outer\">\r\n        <div className=\"layer\"></div>\r\n        <div className=\"inner\">\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const util = utilityStyles();\r\n  return (\r\n    <Grid container>\r\n      <Grid item md={5} xs={12}>\r\n        {/* Form Header */}\r\n        <div className=\"form\">\r\n          <Typography variant=\"h6\" className={util.mbHuge}>\r\n            <strong>CodeWork.pk</strong>\r\n          </Typography>\r\n          <Typography variant=\"h5\" className={util.txtCapitalize}>\r\n            Intelligent Workplace for geeks\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" className={util.mtbTiny}>\r\n            Work Anywhere, Anytime!\r\n          </Typography>\r\n          {/* Form Body */}\r\n          <Form />\r\n        </div>\r\n      </Grid>\r\n      <Grid item md={7} xs={12}>\r\n        <div className=\"img\"></div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Form = () => {\r\n  const util = utilityStyles();\r\n  const [error, setError] = useState(null);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      username: Yup.string().required(\"Username is required!\"),\r\n      password: Yup.string().required(\"Pasword is required!\"),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        await login(\"useraccount\", values.username, values.password);\r\n      } catch (ex) {\r\n        if (ex.response && ex.response.status === 400) {\r\n          setError(ex.response.data);\r\n        }\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <TextField\r\n        id=\"username\"\r\n        label=\"Username\"\r\n        className={util.mtbTiny}\r\n        value={formik.values.username}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        helperText={formik.touched.username ? formik.errors.username : \"\"}\r\n        error={formik.touched.username && Boolean(formik.errors.username)}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        id=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        className={util.mtbTiny}\r\n        value={formik.values.password}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        helperText={formik.touched.password ? formik.errors.password : \"\"}\r\n        error={formik.touched.password && Boolean(formik.errors.password)}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n      />\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        size=\"large\"\r\n        className={util.mtbTiny}\r\n        type=\"submit\"\r\n      >\r\n        Login\r\n      </Button>\r\n      <Typography>\r\n        Dont have an account? <a href=\"#\">Sign Up</a>{\" \"}\r\n      </Typography>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\styles\\login.js",[],"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\styles\\utilityStyles.js",[],"C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\services\\httpService.js",["37"],"import axios from \"axios\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedErrors =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedErrors) {\r\n    alert(\"Unexpected error occured\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","C:\\DATA\\Development\\Web\\CodeWork\\codework.pk\\codework-ui\\src\\services\\authService.js",["38"],"import http from \"./httpService\";\r\n\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function login(controller, username, password) {\r\n  const apiEndpoint = apiUrl + `/${controller}` + \"/login\";\r\n  return http.post(apiEndpoint, { username, password });\r\n}\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":114,"column":31,"nodeType":"45","endLine":114,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":15,"column":1,"nodeType":"48","endLine":20,"endColumn":3},{"ruleId":"49","severity":1,"message":"50","line":6,"column":49,"nodeType":"51","messageId":"52","endLine":6,"endColumn":50},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]